--SUBMISSION FOR LAB 4 ASSESSMENT

--SOLUTION FOR QUESTION 1--

USE E_COMMERCE ;

CREATE TABLE SUPPLIER 
( SUPP_ID INT(10)' , '
 SUPP_NAME VARCHAR(50) NOT NULL' , '
 SUPP_CITY VARCHAR(50) NOT NULL' , '
 SUPP_PHONE VARCHAR(50) NOT NULL' , '
CONSTRAINT SUPP_PK PRIMARY KEY (SUPP_ID)
 ) ;

CREATE TABLE CUSTOMER 
( CUS_ID INT(10)' , '
 CUS_NAME VARCHAR(20) NOT NULL' , '
 CUS_PHONE VARCHAR(10) NOT NULL' , '
 CUS_CITY VARCHAR(30) NOT NULL' , '
 CUS_GENDER CHAR
 CONSTRAINT CUS_PK PRIMARY KEY (CUS_ID)
 ) ;

CREATE TABLE CATEGORY 
( CAT_ID INT(10)' , '
 CAT_NAME VARCHAR(20) NOT NULL' , '
 CONSTRAINT CAT_PK PRIMARY KEY (CAT_ID)
 ) ;

CREATE TABLE PRODUCT 
( PROD_ID INT(10)' , '
 PRO_NAME VARCHAR(20) NOT NULL DEFAULT 'Dummy'' , '
 PRO_DESC VARCHAR(60)' , '
 CAT_ID INT(10)' , '
 CONSTRAINT CAT_PK PRIMARY KEY (PROD_ID)' , '
	FOREIGN KEY(CAT_ID) REFERENCES CATEGORY(CAT_ID)
 ) ;

CREATE TABLE SUPPLIER_PRICING 
( PRICING_ID INT(10)' , '
 SUPP_PRICE INT(10) DEFAULT 0' , '
 PROD_ID INT(10)' , '
 SUPP_ID INT(10)' , '
 CONSTRAINT SUPP_PRIC_PK PRIMARY KEY (PRICING_ID)' , '
	FOREIGN KEY(PROD_ID) REFERENCES PRODUCT(PROD_ID)' , ' 
	FOREIGN KEY(SUPP_ID) REFERENCES SUPPLIER(SUPP_ID)
 ) ;

CREATE TABLE ORDERS 
( ORD_ID INT(10)' , '
  ORD_AMOUNT INT(10) NOT NULL' , '
  ORD_DATE DATE NOT NULL' , '	
  SUPP_PRICE INT(10) DEFAULT 0' , '
  CUS_ID INT(10)' , '
  PRICING_ID INT(10)' , '
  CONSTRAINT ORD_ID_PK PRIMARY KEY (ORD_ID)' , '
	FOREIGN KEY(CUS_ID) REFERENCES CUSTOMER (CUS_ID)' , ' 
	FOREIGN KEY(PRICING_ID) REFERENCES SUPPLIER_PRICING (PRICING_ID)
 ) ;

CREATE TABLE RATING 
( RAT_ID INT(10)' , '
  RAT_RATSTARS INT(10) NOT NULL' , '
  ORD_ID INT(10)' , '
  CONSTRAINT RAT_ID_PK PRIMARY KEY (RAT_ID)' , '
	FOREIGN KEY(ORD_ID) REFERENCES ORDERS (ORD_ID)
 ) ;
 
-------------------------END OF SOLUTION-------------------------

-- SOLUTION FOR QUESTION 2 --

INSERT INTO SUPPLIER
VALUES
(1' , ' ‘Rajesh Retails’ ' , ' ‘Delhi’ ' , ' ‘1234567890’) ;

INSERT INTO SUPPLIER
VALUES
(2' , ' ‘Appario Ltd.’ ' , ' ‘Mumbai’ ' , ' ‘2589631470 ’) ;

INSERT INTO SUPPLIER
VALUES
(3' , ' ‘Knome Products’ ' , ' ‘Bangalore’ ' , ' ‘9785462315 ’) ;

INSERT INTO SUPPLIER
VALUES
(4' , ' ‘Bansal Retails’ ' , ' ‘Kochi ’ ' , ' ‘8975463285’) ;

INSERT INTO SUPPLIER
VALUES
(5' , ' ‘Mittal Ltd.’ ' , ' ‘Lucknow’ ' , ' ‘7898456532’) ;

/

INSERT INTO CUSTOMER
VALUES
(1' , ' ‘AAKASH’' , ' ‘9999999999’ ' , ' ‘DELHI’ ' , ' ‘M’) ;

INSERT INTO CUSTOMER
VALUES
(2' , ' ‘AMAN’' , ' ‘9785463215’ ' , ' ‘DELHI’ ' , ' ‘M’) ;

INSERT INTO CUSTOMER
VALUES
(3' , ' ‘NEHA’' , ' ‘9999999999’ ' , ' ‘MUMBAI’ ' , ' ‘F’) ;

INSERT INTO CUSTOMER
VALUES
(4' , ' ‘MEGHA’' , ' ‘9994562399’ ' , ' ‘KOLKATA’ ' , ' ‘F’) ;

INSERT INTO CUSTOMER
VALUES
(5' , ' ‘PULKIT’' , ' ‘7895999999’ ' , ' ‘LUCKNOW’ ' , ' ‘M’) ;

/

INSERT INTO CATEGORY
VALUES
(1' , ' ‘BOOKS’);

INSERT INTO CATEGORY
VALUES
(2' , ' ‘GAMES’);

INSERT INTO CATEGORY
VALUES
(3' , ' ‘GROCERIES’);

INSERT INTO CATEGORY
VALUES
(4' , ' ‘ELECTRONICS’);

INSERT INTO CATEGORY
VALUES
(5' , ' ‘CLOTHES’);

/

INSERT INTO PRODUCT 
VALUES
(1 , 'GTA V' , 'Windows 7 and above with i5 processor and 8GB RAM' , '2') ;

INSERT INTO PRODUCT 
VALUES
(2  , 'TSHIRT' , 'SIZE-L with Black, Blue and White variations' , '5') ;

INSERT INTO PRODUCT 
VALUES
(3 , ' ROG LAPTOP' , 'Windows 10 with 15inch screen , i7 processor , 1TB SSD' , '4') ;

INSERT INTO PRODUCT 
VALUES
(4 , ' OATS' , 'Highly Nutritious from Nestle' , '3') ;

INSERT INTO PRODUCT 
VALUES
(5 , ' HARRY POTTER' , 'Best Collection of all time by J.K Rowling' , '1') ;

INSERT INTO PRODUCT 
VALUES
(6 , ' MILK' , ' 1L Toned MIlk' , '3') ;

INSERT INTO PRODUCT 
VALUES
(7 , ' Boat Earphones' , '1.5Meter long Dolby Atmos' , '4') ;

INSERT INTO PRODUCT 
VALUES
(8 , ' Jeans' , ' Stretchable Denim Jeans with various sizes and color' , '5') ;

INSERT INTO PRODUCT 
VALUES
(9 , ' Project IGI' , ' compatible with windows 7 and above' , '2') ;

INSERT INTO PRODUCT 
VALUES
(10 , ' Hoodie' , ' Black GUCCI for 13 yrs and above' , '5') ;

INSERT INTO PRODUCT 
VALUES
(11 , 'Rich Dad Poor Dad' , 'Written by RObert Kiyosaki' , '1') ;

INSERT INTO PRODUCT 
VALUES
(12 , 'Train Your Brain' , 'By Shireen Stephen' , '1') ;

/

INSERT INTO SUPPLIER_PRICING  (PRICING_ID, PRO_ID, SUPP_ID, SUPP_PRICE) VALUES ('1', '1', '2', '1500');
INSERT INTO SUPPLIER_PRICING (PRICING_ID, PRO_ID, SUPP_ID, SUPP_PRICE) VALUES ('2', '3', '5', '30000');
INSERT INTO SUPPLIER_PRICING (PRICING_ID, PRO_ID, SUPP_ID, SUPP_PRICE) VALUES ('3', '5', '1', '3000');
INSERT INTO SUPPLIER_PRICING (PRICING_ID, PRO_ID, SUPP_ID, SUPP_PRICE) VALUES ('4', '2', '3', '2500');
INSERT INTO SUPPLIER_PRICING (PRICING_ID, PRO_ID, SUPP_ID, SUPP_PRICE) VALUES ('5', '4', '1', '1000');

/

INSERT INTO ORDER (ORD_ID, ORD_AMOUNT, ORD_DATE, CUS_ID, PRICING_ID) VALUES ('101', '1500', '10/6/21', '2', '1');
INSERT INTO ORDER (ORD_ID, ORD_AMOUNT, ORD_DATE, CUS_ID, PRICING_ID) VALUES ('102', '1000', '10/12/21', '3', '5');
INSERT INTO ORDER (ORD_ID, ORD_AMOUNT, ORD_DATE, CUS_ID, PRICING_ID) VALUES ('103', '30000', '9/16/21', '5', '2');
INSERT INTO ORDER (ORD_ID, ORD_AMOUNT, ORD_DATE, CUS_ID, PRICING_ID) VALUES ('104', '1500', '10/5/21', '1', '1');
INSERT INTO ORDER (ORD_ID, ORD_AMOUNT, ORD_DATE, CUS_ID, PRICING_ID) VALUES ('105', '3000', '8/16/21', '4', '3');
INSERT INTO ORDER (ORD_ID, ORD_AMOUNT, ORD_DATE, CUS_ID, PRICING_ID) VALUES ('106', '1450', '8/18/21', '1', '9');
INSERT INTO ORDER (ORD_ID, ORD_AMOUNT, ORD_DATE, CUS_ID, PRICING_ID) VALUES ('107', '789', '9/1/21', '3', '7');
INSERT INTO ORDER (ORD_ID, ORD_AMOUNT, ORD_DATE, CUS_ID, PRICING_ID) VALUES ('108', '780', '9/7/21', '5', '6');
INSERT INTO ORDER (ORD_ID, ORD_AMOUNT, ORD_DATE, CUS_ID, PRICING_ID) VALUES ('109', '3000', '2021-00-10', '5', '3');
INSERT INTO ORDER (ORD_ID, ORD_AMOUNT, ORD_DATE, CUS_ID, PRICING_ID) VALUES ('110', '2500', '9/10/21', '2', '4');
INSERT INTO ORDER (ORD_ID, ORD_AMOUNT, ORD_DATE, CUS_ID, PRICING_ID) VALUES ('111', '1000', '9/15/21', '4', '5');
INSERT INTO ORDER (ORD_ID, ORD_AMOUNT, ORD_DATE, CUS_ID, PRICING_ID) VALUES ('112', '789', '9/16/21', '4', '7');
INSERT INTO ORDER (ORD_ID, ORD_AMOUNT, ORD_DATE, CUS_ID, PRICING_ID) VALUES ('113', '31000', '9/16/21', '1', '8');
INSERT INTO ORDER (ORD_ID, ORD_AMOUNT, ORD_DATE, CUS_ID, PRICING_ID) VALUES ('114', '1000', '9/16/21', '3', '5');
INSERT INTO ORDER (ORD_ID, ORD_AMOUNT, ORD_DATE, CUS_ID, PRICING_ID) VALUES ('115', '3000', '9/16/21', '5', '3');
INSERT INTO ORDER (ORD_ID, ORD_AMOUNT, ORD_DATE, CUS_ID, PRICING_ID) VALUES ('116', '99', '9/17/21', '2', '14');

/

-------------------------END OF SOLUTION-------------------------

-- SOLUTION FOR QUESTION 3--
--Display the total number of customers based on gender who have placed orders of worth at least Rs.3000.

Select  count(1) , cus_gender as Gender from 
Customer a , orders b
Where a.cus_id = b.cus_id
And a.pricing_id in
(Select pricing_id from supplier_pricing where supp_price >= 3000 ) 
Group by a.cus_gender ;

-------------------------END OF SOLUTION-------------------------

--SOLUTION FOR QUESTION 4 --
--Display all the orders along with product name ordered by a customer having Customer_Id=2

Select a.ord_id as OrderId, prod_name as Product_Name
From
Orders a , Product b, supplier_pricing c
Where 
a.pricing_id = c.pricing_id 
And c.prod_id = b.prod_id
And
a.cus_id = 2 ;

-------------------------END OF SOLUTION-------------------------

--SOLUTION FOR QUESTION 5 --
--Display the Supplier details who can supply more than 
one product.

Select * from supplier where supp_id in
(Select supp_id, count(supp_id) as sup_count from supplier_pricing where sup_count > 1) ;

-------------------------END OF SOLUTION-------------------------

--SOLUTION FOR QUESTION 6 --
Find the least expensive product from each category and print the table with category id, name, product name and price of the product

-------------------------END OF SOLUTION-------------------------

--SOLUTION FOR QUESTION 7 --
Display the Id and Name of the Product ordered after “2021-10-05”.
	
Select b.prod_id , b.pro_name
From
supplier_pricing a , product b 
Where a.prod_id = b.prod_id
And a.pricing_id in
(select pricing_id from order where ord_date > ‘2021-10-05’ );

-------------------------END OF SOLUTION-------------------------

--SOLUTION FOR QUESTION 8 --
--Display customer name and gender whose names start or end with character ‘A'.

Select cus_name, cus_gender from customer where
(cus_name like ‘A%’ Or  cus_name like ‘%A’ ) ;

-------------------------END OF SOLUTION-------------------------

--SOLUTION FOR QUESTION 9 --
--Create a stored procedure to display supplier id, name, rating and Type_of_Service. For Type_of_Service, If rating =5, print “Excellent Service”,If rating >4 print “Good Service”, If rating >2 print “Average Service” else print “Poor Service”.

Create procedure SUPPLIER_DETAILS
AS
BEGIN

SELECT A.SUPP_NAME AS SUPPLIER, 
A.SUP_ID AS SUPPLIER_ID , 
B.RAT_RATSTARS 
(CASE WHEN B.RAT_RATSTARS = 5 THEN ‘EXCELLENT SERVICE’
		     WHEN B.RAT_RATSTARS > 4 THEN ‘GOOD SERVICE’
		      WHEN B.RAT_RATSTARS  > 2 THEN ‘AVERAGE SERVICE’	
		       ELSE ‘POOR SERVICE’	END	) AS TYPE_OF_SERVICE
FROM SUPPLIER A , RATING B , SUPPLIER_PRICING C , ORDER D
WHERE
A.SUPP_ID = C.SUPP_ID AND
C.PRICING_ID = D.PRICING_ID AND
D.ORD_ID = B.ORD_ID


END ;

-------------------------END OF SOLUTION-------------------------
